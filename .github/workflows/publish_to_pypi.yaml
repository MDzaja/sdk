name: Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on tags starting with 'v'

jobs:
  release:
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # Required for Trusted Publisher authentication

    defaults:
      run:
        working-directory: packages/python  # Set working directory

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Validate Tag Format
        id: validate_tag
        run: |
          TAG_NAME="${GITHUB_REF#refs/tags/}"
          echo "Tag name: $TAG_NAME"

          # Validate tag format: vX.Y.Z, vX.Y, vX.Y.ZaN, vX.Y.ZbN, vX.Y.ZrcN
          if [[ ! "$TAG_NAME" =~ ^v([0-9]+)\.([0-9]+)(\.[0-9]+)?(a[0-9]+|b[0-9]+|rc[0-9]+)?$ ]]; then
            echo "Invalid tag format: $TAG_NAME"
            echo "Allowed formats: vX.Y, vX.Y.Z, vX.Y.ZaN, vX.Y.ZbN, vX.Y.ZrcN"
            exit 0
          fi

          # Extract version from tag (remove 'v' prefix)
          PACKAGE_VERSION="${TAG_NAME#v}"
          echo "PACKAGE_VERSION=$PACKAGE_VERSION" >> $GITHUB_ENV

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade setuptools wheel twine build tomli tomli-w

      - name: Update Version in pyproject.toml
        run: |
          python3 -c "
          import tomli, tomli_w
          from pathlib import Path

          toml_path = Path('pyproject.toml')
          data = tomli.loads(toml_path.read_text())
          data['project']['version'] = '$PACKAGE_VERSION'
          toml_path.write_text(tomli_w.dumps(data))
          "

      - name: Build the package (Official Release)
        run: |
          rm -rf dist/*
          python3 -m build

      - name: Publish to PyPI using Trusted Publisher
        run: |
          twine upload --repository testpypi dist/* --verbose

      - name: Display Published Package Info
        run: |
          PACKAGE_NAME=$(python3 -c "import tomli; from pathlib import Path; \
            content = Path('pyproject.toml').read_text(); \
            print(tomli.loads(content)['project']['name'])")

          echo "Successfully published $PACKAGE_NAME==$PACKAGE_VERSION to PyPI!"
          echo "Install it using:"
          echo -e "\tpip install $PACKAGE_NAME==$PACKAGE_VERSION"
