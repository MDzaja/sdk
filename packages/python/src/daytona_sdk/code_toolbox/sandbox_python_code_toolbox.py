import base64
from typing import Optional

from ..common.code_run_params import CodeRunParams
import re


class SandboxPythonCodeToolbox:
    def get_run_command(self, code: str, params: Optional[CodeRunParams] = None) -> str:
        # Encode the provided code in base64
        base64_code = base64.b64encode(code.encode()).decode()

        # Override plt.show() method if matplotlib is imported
        if self._is_matplotlib_imported(code):
            code_wrapper = base64.b64decode(PYTHON_CODE_WRAPPER.encode()).decode()
            code_wrapper = code_wrapper.replace("{encoded_code}", base64_code)
            base64_code = base64.b64encode(code_wrapper.encode()).decode()

        # Build environment variables string
        env_vars = ""
        if params and params.env:
            env_vars = ' '.join(f"{key}='{value}'" for key, value in params.env.items())

        # Build command-line arguments string
        argv = ""
        if params and params.argv:
            argv = " ".join(params.argv)

        # Execute the bootstrapper code directly
        # Use -u flag to ensure unbuffered output for real-time error reporting
        return f""" sh -c '{env_vars} python3 -u -c "exec(__import__(\\\"base64\\\").b64decode(\\\"{base64_code}\\\").decode())" {argv}' """

    @staticmethod
    def _is_matplotlib_imported(code: str) -> bool:
        """Simplified version that only uses regex to check for matplotlib imports"""
        patterns = [
            # Standard imports
            r'^[^#]*import\s+matplotlib',
            r'^[^#]*from\s+matplotlib',
            
            # Dynamic imports
            r'^[^#]*__import__\s*\(\s*[\'"]matplotlib[\'"]',
            r'^[^#]*importlib\.import_module\s*\(\s*[\'"]matplotlib[\'"]',
            
            # Other dynamic loading patterns
            r'^[^#]*loader\.load_module\s*\(\s*[\'"]matplotlib[\'"]',
            r'^[^#]*sys\.modules\[[\'"]matplotlib[\'"]\]',
        ]
        
        for pattern in patterns:
            if re.search(pattern, code, re.MULTILINE):
                return True
        
        return False


PYTHON_CODE_WRAPPER = """
IyEvdXNyL2Jpbi9lbnYgcHl0aG9uMwojIFRoaXMgZmlsZSBjb250YWlucyB0aGUgYm9vdHN0cmFw
cGVyIGNvZGUgZm9yIG1hdHBsb3RsaWIgaW50ZXJjZXB0b3IKIyBJdCB3aWxsIGJlIGxvYWRlZCBh
bmQgYmFzZTY0IGVuY29kZWQgaW4gdGhlIHdvcmtzcGFjZV9weXRob25fY29kZV90b29sYm94LnB5
CgojIFN0YW5kYXJkIGxpYnJhcnkgaW1wb3J0cwppbXBvcnQgc3lzCmltcG9ydCB0eXBlcwppbXBv
cnQgYmFzZTY0CmltcG9ydCBqc29uCmltcG9ydCB0cmFjZWJhY2sKaW1wb3J0IGxpbmVjYWNoZQpp
bXBvcnQgcmUKaW1wb3J0IGlvCmZyb20gaW1wb3J0bGliLmFiYyBpbXBvcnQgTWV0YVBhdGhGaW5k
ZXIsIExvYWRlcgpmcm9tIGltcG9ydGxpYi51dGlsIGltcG9ydCBzcGVjX2Zyb21fbG9hZGVyLCBm
aW5kX3NwZWMKCiMgRmxhZyB0byB0cmFjayBpZiB3ZSd2ZSBhbHJlYWR5IHBhdGNoZWQgbWF0cGxv
dGxpYgpwbHRfcGF0Y2hlZCA9IEZhbHNlCgojIFNldCB0byB0cmFjayBmaWd1cmUgbnVtYmVycyB0
aGF0IGhhdmUgYmVlbiBwcm9jZXNzZWQKcHJvY2Vzc2VkX2ZpZ3VyZXMgPSBzZXQoKQoKCmRlZiBl
eHRyYWN0X2JveF9wbG90X2RhdGEoYXgsIHh0aWNrbGFiZWxzKToKICAgICIiIkV4dHJhY3QgZGF0
YSBmcm9tIGJveCBwbG90cyIiIgogICAgaW1wb3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAoK
ICAgIGVsZW1lbnRzID0gW10KICAgICMgRmluZCBhbGwgYm94IHBsb3QgZWxlbWVudHMKICAgIGJv
eGVzID0gW2NoaWxkIGZvciBjaGlsZCBpbiBheC5nZXRfY2hpbGRyZW4oKSBpZiBpc2luc3RhbmNl
KAogICAgICAgIGNoaWxkLCBwbHQubWF0cGxvdGxpYi5wYXRjaGVzLlBhdGhQYXRjaCldCiAgICB3
aGlza2VycyA9IFtjaGlsZCBmb3IgY2hpbGQgaW4gYXguZ2V0X2NoaWxkcmVuKCkgaWYgaXNpbnN0
YW5jZSgKICAgICAgICBjaGlsZCwgcGx0LkxpbmUyRCkgYW5kIGNoaWxkLmdldF9saW5lc3R5bGUo
KSA9PSAnLSddCiAgICBtZWRpYW5zID0gW2NoaWxkIGZvciBjaGlsZCBpbiBheC5nZXRfY2hpbGRy
ZW4oKSBpZiBpc2luc3RhbmNlKAogICAgICAgIGNoaWxkLCBwbHQuTGluZTJEKSBhbmQgY2hpbGQu
Z2V0X2xpbmVzdHlsZSgpID09ICctJyBhbmQgY2hpbGQuZ2V0X2NvbG9yKCkgPT0gJ29yYW5nZSdd
CiAgICBmbGllcnMgPSBbY2hpbGQgZm9yIGNoaWxkIGluIGF4LmdldF9jaGlsZHJlbigpIGlmIGlz
aW5zdGFuY2UoCiAgICAgICAgY2hpbGQsIHBsdC5MaW5lMkQpIGFuZCBjaGlsZC5nZXRfbWFya2Vy
KCkgPT0gJ28nXQoKICAgICMgUHJvY2VzcyBlYWNoIGJveCBwbG90CiAgICBmb3IgaWR4IGluIHJh
bmdlKGxlbihib3hlcykpOgogICAgICAgICMgR2V0IHN0YXRpc3RpY2FsIHZhbHVlcwogICAgICAg
IGJveCA9IGJveGVzW2lkeF0KICAgICAgICBwYXRoID0gYm94LmdldF9wYXRoKCkKICAgICAgICB2
ZXJ0aWNlcyA9IHBhdGgudmVydGljZXMKCiAgICAgICAgIyBCb3ggY29vcmRpbmF0ZXMKICAgICAg
ICB5X3ZhbHVlcyA9IHZlcnRpY2VzWzosIDFdICAjIEdldCBhbGwgeS1jb29yZGluYXRlcwogICAg
ICAgIHNvcnRlZF95ID0gc29ydGVkKHNldCh5X3ZhbHVlcykpICAjIFJlbW92ZSBkdXBsaWNhdGVz
IGFuZCBzb3J0CgogICAgICAgICMgRXh0cmFjdCBzdGF0aXN0aWNhbCB2YWx1ZXMKICAgICAgICBl
bGVtZW50ID0gewogICAgICAgICAgICAibGFiZWwiOiB4dGlja2xhYmVsc1tpZHhdIGlmIGlkeCA8
IGxlbih4dGlja2xhYmVscykgZWxzZSBmIkJveCB7aWR4ICsgMX0iLAogICAgICAgICAgICAibWlu
Ijogc29ydGVkX3lbMF0sICAjIEJvdHRvbSB3aGlza2VyCiAgICAgICAgICAgICJmaXJzdF9xdWFy
dGlsZSI6IHNvcnRlZF95WzFdLCAgIyBCb3R0b20gb2YgYm94CiAgICAgICAgICAgICJtZWRpYW4i
OiBzb3J0ZWRfeVsyXSwgICMgTWVkaWFuIGxpbmUKICAgICAgICAgICAgInRoaXJkX3F1YXJ0aWxl
Ijogc29ydGVkX3lbM10sICAjIFRvcCBvZiBib3gKICAgICAgICAgICAgIm1heCI6IHNvcnRlZF95
WzRdLCAgIyBUb3Agd2hpc2tlcgogICAgICAgICAgICAib3V0bGllcnMiOiBbXSAgIyBXaWxsIGJl
IHBvcHVsYXRlZCBpZiB0aGVyZSBhcmUgYW55CiAgICAgICAgfQoKICAgICAgICAjIEdldCBvdXRs
aWVycyBpZiBhbnkgZXhpc3QKICAgICAgICBpZiBpZHggPCBsZW4oZmxpZXJzKToKICAgICAgICAg
ICAgZmxpZXIgPSBmbGllcnNbaWR4XQogICAgICAgICAgICBpZiBmbGllci5nZXRfeWRhdGEoKSBp
cyBub3QgTm9uZToKICAgICAgICAgICAgICAgIGVsZW1lbnRbIm91dGxpZXJzIl0gPSBsaXN0KGZs
aWVyLmdldF95ZGF0YSgpKQoKICAgICAgICBlbGVtZW50cy5hcHBlbmQoZWxlbWVudCkKCiAgICBy
ZXR1cm4gZWxlbWVudHMKCgpkZWYgZXh0cmFjdF9saW5lX3Bsb3RfZGF0YShheCk6CiAgICAiIiJF
eHRyYWN0IGRhdGEgZnJvbSBsaW5lIHBsb3RzIiIiCiAgICBpbXBvcnQgbWF0cGxvdGxpYi5weXBs
b3QgYXMgcGx0CgogICAgZWxlbWVudHMgPSBbXQogICAgIyBHZXQgYWxsIGxpbmVzCiAgICBsaW5l
cyA9IFtjaGlsZCBmb3IgY2hpbGQgaW4gYXguZ2V0X2NoaWxkcmVuKAogICAgKSBpZiBpc2luc3Rh
bmNlKGNoaWxkLCBwbHQuTGluZTJEKV0KCiAgICAjIFByb2Nlc3MgZWFjaCBsaW5lCiAgICBmb3Ig
bGluZSBpbiBsaW5lczoKICAgICAgICAjIFNraXAgbGluZXMgdGhhdCBhcmUgcGFydCBvZiBvdGhl
ciBwbG90IHR5cGVzIChsaWtlIGJveCBwbG90IHdoaXNrZXJzKQogICAgICAgIGlmIGxpbmUuZ2V0
X2xpbmVzdHlsZSgpID09ICctJyBhbmQgbm90IGFueShpc2luc3RhbmNlKGNoaWxkLCBwbHQubWF0
cGxvdGxpYi5wYXRjaGVzLlBhdGhQYXRjaCkgZm9yIGNoaWxkIGluIGF4LmdldF9jaGlsZHJlbigp
KToKICAgICAgICAgICAgeF9kYXRhID0gbGluZS5nZXRfeGRhdGEoKQogICAgICAgICAgICB5X2Rh
dGEgPSBsaW5lLmdldF95ZGF0YSgpCiAgICAgICAgICAgICMgQ29udmVydCB0byBsaXN0IGlmIG5l
ZWRlZAogICAgICAgICAgICB4X2RhdGEgPSB4X2RhdGEudG9saXN0KCkgaWYgaGFzYXR0cih4X2Rh
dGEsICd0b2xpc3QnKSBlbHNlIGxpc3QoeF9kYXRhKQogICAgICAgICAgICB5X2RhdGEgPSB5X2Rh
dGEudG9saXN0KCkgaWYgaGFzYXR0cih5X2RhdGEsICd0b2xpc3QnKSBlbHNlIGxpc3QoeV9kYXRh
KQogICAgICAgICAgICBwb2ludHMgPSBbW2Zsb2F0KHgpLCBmbG9hdCh5KV0gZm9yIHgsIHkgaW4g
emlwKHhfZGF0YSwgeV9kYXRhKV0KICAgICAgICAgICAgZWxlbWVudCA9IHsKICAgICAgICAgICAg
ICAgICJsYWJlbCI6IGxpbmUuZ2V0X2xhYmVsKCkgb3IgZiJMaW5lIHtsZW4oZWxlbWVudHMpICsg
MX0iLAogICAgICAgICAgICAgICAgInBvaW50cyI6IHBvaW50cwogICAgICAgICAgICB9CiAgICAg
ICAgICAgIGVsZW1lbnRzLmFwcGVuZChlbGVtZW50KQoKICAgIHJldHVybiBlbGVtZW50cwoKCmRl
ZiBleHRyYWN0X3NjYXR0ZXJfcGxvdF9kYXRhKGF4KToKICAgICIiIkV4dHJhY3QgZGF0YSBmcm9t
IHNjYXR0ZXIgcGxvdHMiIiIKICAgIGltcG9ydCBtYXRwbG90bGliLmNvbGxlY3Rpb25zCgogICAg
ZWxlbWVudHMgPSBbXQogICAgIyBHZXQgYWxsIHNjYXR0ZXIgcGxvdHMKICAgIHNjYXR0ZXJzID0g
W2NoaWxkIGZvciBjaGlsZCBpbiBheC5nZXRfY2hpbGRyZW4oKQogICAgICAgICAgICAgICAgaWYg
aXNpbnN0YW5jZShjaGlsZCwgbWF0cGxvdGxpYi5jb2xsZWN0aW9ucy5QYXRoQ29sbGVjdGlvbild
CgogICAgIyBQcm9jZXNzIGVhY2ggc2NhdHRlciBwbG90CiAgICBmb3Igc2NhdHRlciBpbiBzY2F0
dGVyczoKICAgICAgICBvZmZzZXRzID0gc2NhdHRlci5nZXRfb2Zmc2V0cygpCiAgICAgICAgIyBD
b252ZXJ0IHRvIGxpc3QgaWYgbmVlZGVkCiAgICAgICAgb2Zmc2V0cyA9IG9mZnNldHMudG9saXN0
KCkgaWYgaGFzYXR0cihvZmZzZXRzLCAndG9saXN0JykgZWxzZSBsaXN0KG9mZnNldHMpCiAgICAg
ICAgcG9pbnRzID0gW1tmbG9hdCh4KSwgZmxvYXQoeSldIGZvciB4LCB5IGluIG9mZnNldHNdCiAg
ICAgICAgZWxlbWVudCA9IHsKICAgICAgICAgICAgImxhYmVsIjogc2NhdHRlci5nZXRfbGFiZWwo
KSBvciBmIlNjYXR0ZXIge2xlbihlbGVtZW50cykgKyAxfSIsCiAgICAgICAgICAgICJwb2ludHMi
OiBwb2ludHMKICAgICAgICB9CiAgICAgICAgZWxlbWVudHMuYXBwZW5kKGVsZW1lbnQpCgogICAg
cmV0dXJuIGVsZW1lbnRzCgoKZGVmIGV4dHJhY3RfYmFyX2NoYXJ0X2RhdGEoYXgsIHh0aWNrbGFi
ZWxzKToKICAgICIiIkV4dHJhY3QgZGF0YSBmcm9tIGJhciBjaGFydHMiIiIKICAgIGltcG9ydCBt
YXRwbG90bGliLnB5cGxvdCBhcyBwbHQKCiAgICBlbGVtZW50cyA9IFtdCiAgICAjIEdldCBhbGwg
YmFycyBmcm9tIHRoZSBheGlzCiAgICBiYXJzID0gW2NoaWxkIGZvciBjaGlsZCBpbiBheC5nZXRf
Y2hpbGRyZW4oKQogICAgICAgICAgICBpZiBpc2luc3RhbmNlKGNoaWxkLCBwbHQuUmVjdGFuZ2xl
KSBhbmQgY2hpbGQuZ2V0X2hlaWdodCgpID4gMF0KCiAgICAjIEV4dHJhY3QgYmFyIGRhdGEKICAg
IGZvciBpZHgsIGJhciBpbiBlbnVtZXJhdGUoYmFycyk6CiAgICAgICAgIyBPbmx5IGFkZCBlbGVt
ZW50cyBpZiB0aGVyZSdzIGEgY29ycmVzcG9uZGluZyBsYWJlbAogICAgICAgIGlmIGlkeCA8IGxl
bih4dGlja2xhYmVscyk6CiAgICAgICAgICAgIGVsZW1lbnQgPSB7CiAgICAgICAgICAgICAgICAi
bGFiZWwiOiB4dGlja2xhYmVsc1tpZHhdLAogICAgICAgICAgICAgICAgImdyb3VwIjogYmFyLmdl
dF9sYWJlbCgpIG9yICJkZWZhdWx0IiwKICAgICAgICAgICAgICAgICJ2YWx1ZSI6IGZsb2F0KGJh
ci5nZXRfaGVpZ2h0KCkpCiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxlbWVudHMuYXBwZW5k
KGVsZW1lbnQpCgogICAgcmV0dXJuIGVsZW1lbnRzCgoKZGVmIGV4dHJhY3RfcGllX2NoYXJ0X2Rh
dGEoYXgpOgogICAgIiIiRXh0cmFjdCBkYXRhIGZyb20gcGllIGNoYXJ0cyIiIgogICAgaW1wb3J0
IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAoKICAgIGVsZW1lbnRzID0gW10KICAgICMgR2V0IGFs
bCB3ZWRnZXMgZnJvbSB0aGUgYXhpcwogICAgd2VkZ2VzID0gW2NoaWxkIGZvciBjaGlsZCBpbiBh
eC5nZXRfY2hpbGRyZW4oCiAgICApIGlmIGlzaW5zdGFuY2UoY2hpbGQsIHBsdC5XZWRnZSldCiAg
ICB0ZXh0cyA9IFtjaGlsZCBmb3IgY2hpbGQgaW4gYXguZ2V0X2NoaWxkcmVuKCkgaWYgaXNpbnN0
YW5jZSgKICAgICAgICBjaGlsZCwgcGx0LlRleHQpIGFuZCBjaGlsZC5nZXRfdGV4dCgpXQoKICAg
ICMgRXh0cmFjdCBwaWUgZGF0YQogICAgZm9yIGlkeCwgd2VkZ2UgaW4gZW51bWVyYXRlKHdlZGdl
cyk6CiAgICAgICAgIyBHZXQgdGhlIGxhYmVsIGZyb20gdGhlIHRleHQgb2JqZWN0cyBpZiBhdmFp
bGFibGUKICAgICAgICBsYWJlbCA9IHRleHRzW2lkeF0uZ2V0X3RleHQoKSBpZiBpZHggPCBsZW4o
CiAgICAgICAgICAgIHRleHRzKSBlbHNlIGYiU2xpY2Uge2lkeCArIDF9IgoKICAgICAgICBlbGVt
ZW50ID0gewogICAgICAgICAgICAibGFiZWwiOiBsYWJlbCwKICAgICAgICAgICAgImFuZ2xlIjog
ZmxvYXQod2VkZ2UudGhldGEyIC0gd2VkZ2UudGhldGExKSwgICMgQ29udmVydCB0byBmbG9hdAog
ICAgICAgICAgICAicmFkaXVzIjogZmxvYXQod2VkZ2UucikgICMgQ29udmVydCB0byBmbG9hdAog
ICAgICAgIH0KICAgICAgICBlbGVtZW50cy5hcHBlbmQoZWxlbWVudCkKCiAgICByZXR1cm4gZWxl
bWVudHMKCgpkZWYgcmVjcmVhdGVfYW5kX3NhdmVfYmFyX2NoYXJ0KGF4LCBlbGVtZW50cywgc3Vi
cGxvdF9heCk6CiAgICAiIiJSZWNyZWF0ZSBhIGJhciBjaGFydCBpbiBhIG5ldyBheGlzIiIiCiAg
ICAjIEZpbHRlciBvdXQgemVybyB2YWx1ZXMgYW5kIGFueSBlbGVtZW50cyB3aXRoIGRlZmF1bHQg
b3IgbnVtZXJpYy1vbmx5IGxhYmVscwogICAgZmlsdGVyZWRfZWxlbWVudHMgPSBbXQogICAgZm9y
IGVsZW0gaW4gZWxlbWVudHM6CiAgICAgICAgIyBTa2lwIGVsZW1lbnRzIHdpdGggdmVyeSBzbWFs
bCB2YWx1ZXMKICAgICAgICBpZiBlbGVtWyJ2YWx1ZSJdIDw9IDEuMDoKICAgICAgICAgICAgY29u
dGludWUKCiAgICAgICAgIyBTa2lwIGVsZW1lbnRzIHdpdGggZGVmYXVsdCBncm91cCBhbmQgbnVt
ZXJpYyBsYWJlbHMgKGxpa2VseSBhcnRpZmFjdHMpCiAgICAgICAgaWYgZWxlbVsiZ3JvdXAiXSA9
PSAiZGVmYXVsdCIgYW5kIGVsZW1bImxhYmVsIl0uaXNkaWdpdCgpOgogICAgICAgICAgICBjb250
aW51ZQoKICAgICAgICAjIFNraXAgZWxlbWVudHMgd2l0aCBsYWJlbHMgdGhhdCBzdGFydCB3aXRo
ICJUZXh0KCIKICAgICAgICAjIGJ1dCBleHRyYWN0IHRoZSBhY3R1YWwgbGFiZWwgaWYgaXQncyBl
bWJlZGRlZAogICAgICAgIGlmIGlzaW5zdGFuY2UoZWxlbVsibGFiZWwiXSwgc3RyKSBhbmQgZWxl
bVsibGFiZWwiXS5zdGFydHN3aXRoKCJUZXh0KCIpOgogICAgICAgICAgICAjIFRyeSB0byBleHRy
YWN0IHRoZSBhY3R1YWwgbGFiZWwgZnJvbSB0aGUgVGV4dCBvYmplY3QgcmVwcmVzZW50YXRpb24K
ICAgICAgICAgICAgbWF0Y2ggPSByZS5zZWFyY2gociInKFteJ10qKSciLCBlbGVtWyJsYWJlbCJd
KQogICAgICAgICAgICBpZiBtYXRjaDoKICAgICAgICAgICAgICAgIGVsZW1bImxhYmVsIl0gPSBt
YXRjaC5ncm91cCgxKQoKICAgICAgICBmaWx0ZXJlZF9lbGVtZW50cy5hcHBlbmQoZWxlbSkKCiAg
ICBpZiBmaWx0ZXJlZF9lbGVtZW50czoKICAgICAgICAjIFVzZSBudW1lcmljIHBvc2l0aW9ucyBm
b3IgYmFycwogICAgICAgIHBvc2l0aW9ucyA9IGxpc3QocmFuZ2UobGVuKGZpbHRlcmVkX2VsZW1l
bnRzKSkpCiAgICAgICAgbGFiZWxzID0gW2VsZW1bImxhYmVsIl0gZm9yIGVsZW0gaW4gZmlsdGVy
ZWRfZWxlbWVudHNdCiAgICAgICAgdmFsdWVzID0gW2VsZW1bInZhbHVlIl0gZm9yIGVsZW0gaW4g
ZmlsdGVyZWRfZWxlbWVudHNdCgogICAgICAgICMgUGxvdCBiYXJzIGF0IG51bWVyaWMgcG9zaXRp
b25zCiAgICAgICAgc3VicGxvdF9heC5iYXIocG9zaXRpb25zLCB2YWx1ZXMsIGNvbG9yPSdibHVl
JykKCiAgICAgICAgIyBTZXQgdGhlIHgtdGlja3MgYW5kIGxhYmVscyBvbmx5IGF0IHRoZSBiYXIg
cG9zaXRpb25zCiAgICAgICAgc3VicGxvdF9heC5zZXRfeHRpY2tzKHBvc2l0aW9ucykKICAgICAg
ICBzdWJwbG90X2F4LnNldF94dGlja2xhYmVscyhsYWJlbHMpCgogICAgICAgICMgU2V0IGEgc2xp
Z2h0bHkgd2lkZXIgeCBsaW1pdCB0byBnaXZlIHNvbWUgcGFkZGluZwogICAgICAgIHN1YnBsb3Rf
YXguc2V0X3hsaW0oLTAuNSwgbGVuKHBvc2l0aW9ucykgLSAwLjUpCiAgICBlbHNlOgogICAgICAg
ICMgTm8gdmFsaWQgZWxlbWVudHMgYWZ0ZXIgZmlsdGVyaW5nCiAgICAgICAgc3VicGxvdF9heC50
ZXh0KDAuNSwgMC41LCAiTm8gdmFsaWQgZGF0YSIsIGhhPSdjZW50ZXInLCB2YT0nY2VudGVyJykK
CiAgICAjIEFkZCBsZWdlbmQgaWYgb3JpZ2luYWwgcGxvdCBoYWQgb25lCiAgICBpZiBheC5nZXRf
bGVnZW5kKCk6CiAgICAgICAgc3VicGxvdF9heC5sZWdlbmQoKQoKICAgIHJldHVybiBzdWJwbG90
X2F4CgoKZGVmIHJlY3JlYXRlX2FuZF9zYXZlX3NjYXR0ZXJfcGxvdChheCwgZWxlbWVudHMsIHN1
YnBsb3RfYXgpOgogICAgIiIiUmVjcmVhdGUgYSBzY2F0dGVyIHBsb3QgaW4gYSBuZXcgYXhpcyIi
IgogICAgZm9yIGVsZW0gaW4gZWxlbWVudHM6CiAgICAgICAgcG9pbnRzID0gZWxlbVsicG9pbnRz
Il0KICAgICAgICBpZiBwb2ludHM6ICAjIE9ubHkgcHJvY2VzcyBpZiB0aGVyZSBhcmUgYWN0dWFs
IHBvaW50cwogICAgICAgICAgICB4X3ZhbHVlcyA9IFtwb2ludFswXSBmb3IgcG9pbnQgaW4gcG9p
bnRzXQogICAgICAgICAgICB5X3ZhbHVlcyA9IFtwb2ludFsxXSBmb3IgcG9pbnQgaW4gcG9pbnRz
XQogICAgICAgICAgICBzdWJwbG90X2F4LnNjYXR0ZXIoeF92YWx1ZXMsIHlfdmFsdWVzLCBsYWJl
bD1lbGVtWyJsYWJlbCJdKQoKICAgIGlmIGF4LmdldF9sZWdlbmQoKToKICAgICAgICBzdWJwbG90
X2F4LmxlZ2VuZCgpCgogICAgcmV0dXJuIHN1YnBsb3RfYXgKCgpkZWYgcmVjcmVhdGVfYW5kX3Nh
dmVfbGluZV9wbG90KGF4LCBlbGVtZW50cywgc3VicGxvdF9heCk6CiAgICAiIiJSZWNyZWF0ZSBh
IGxpbmUgcGxvdCBpbiBhIG5ldyBheGlzIiIiCiAgICBmb3IgZWxlbSBpbiBlbGVtZW50czoKICAg
ICAgICBwb2ludHMgPSBlbGVtWyJwb2ludHMiXQogICAgICAgIGlmIHBvaW50czogICMgT25seSBw
cm9jZXNzIGlmIHRoZXJlIGFyZSBhY3R1YWwgcG9pbnRzCiAgICAgICAgICAgIHhfdmFsdWVzID0g
W3BvaW50WzBdIGZvciBwb2ludCBpbiBwb2ludHNdCiAgICAgICAgICAgIHlfdmFsdWVzID0gW3Bv
aW50WzFdIGZvciBwb2ludCBpbiBwb2ludHNdCiAgICAgICAgICAgIHN1YnBsb3RfYXgucGxvdCh4
X3ZhbHVlcywgeV92YWx1ZXMsIGxhYmVsPWVsZW1bImxhYmVsIl0pCgogICAgaWYgYXguZ2V0X2xl
Z2VuZCgpOgogICAgICAgIHN1YnBsb3RfYXgubGVnZW5kKCkKCiAgICByZXR1cm4gc3VicGxvdF9h
eAoKCmRlZiByZWNyZWF0ZV9hbmRfc2F2ZV9waWVfY2hhcnQoYXgsIGVsZW1lbnRzLCBzdWJwbG90
X2F4KToKICAgICIiIlJlY3JlYXRlIGEgcGllIGNoYXJ0IGluIGEgbmV3IGF4aXMiIiIKICAgIGlm
IGVsZW1lbnRzOgogICAgICAgICMgRmlsdGVyIG91dCB2ZXJ5IHNtYWxsIHNsaWNlcyAobGVzcyB0
aGFuIDEgZGVncmVlKQogICAgICAgIGZpbHRlcmVkX2VsZW1lbnRzID0gW2VsZW0gZm9yIGVsZW0g
aW4gZWxlbWVudHMgaWYgZWxlbVsiYW5nbGUiXSA+IDEuMF0KCiAgICAgICAgaWYgZmlsdGVyZWRf
ZWxlbWVudHM6CiAgICAgICAgICAgIGxhYmVscyA9IFtlbGVtWyJsYWJlbCJdIGZvciBlbGVtIGlu
IGZpbHRlcmVkX2VsZW1lbnRzXQogICAgICAgICAgICBhbmdsZXMgPSBbZWxlbVsiYW5nbGUiXSBm
b3IgZWxlbSBpbiBmaWx0ZXJlZF9lbGVtZW50c10KICAgICAgICAgICAgc3VicGxvdF9heC5waWUo
YW5nbGVzLCBsYWJlbHM9bGFiZWxzLCBhdXRvcGN0PSclMS4xZiUlJykKICAgICAgICBlbHNlOgog
ICAgICAgICAgICAjIEZhbGxiYWNrIGlmIGFsbCBzbGljZXMgd2VyZSBmaWx0ZXJlZCBvdXQKICAg
ICAgICAgICAgbGFiZWxzID0gW2VsZW1bImxhYmVsIl0gZm9yIGVsZW0gaW4gZWxlbWVudHNdCiAg
ICAgICAgICAgIGFuZ2xlcyA9IFtlbGVtWyJhbmdsZSJdIGZvciBlbGVtIGluIGVsZW1lbnRzXQog
ICAgICAgICAgICBzdWJwbG90X2F4LnBpZShhbmdsZXMsIGxhYmVscz1sYWJlbHMsIGF1dG9wY3Q9
JyUxLjFmJSUnKQoKICAgIHJldHVybiBzdWJwbG90X2F4CgoKZGVmIGNvcHlfYXhpc19wcm9wZXJ0
aWVzKHNvdXJjZV9heCwgdGFyZ2V0X2F4KToKICAgICIiIkNvcHkgYXhpcyBwcm9wZXJ0aWVzIGZy
b20gb25lIGF4aXMgdG8gYW5vdGhlciIiIgogICAgIyBDb3B5IHRpdGxlIGFuZCBsYWJlbHMKICAg
IHRhcmdldF9heC5zZXRfdGl0bGUoc291cmNlX2F4LmdldF90aXRsZSgpKQogICAgdGFyZ2V0X2F4
LnNldF94bGFiZWwoc291cmNlX2F4LmdldF94bGFiZWwoKSkKICAgIHRhcmdldF9heC5zZXRfeWxh
YmVsKHNvdXJjZV9heC5nZXRfeWxhYmVsKCkpCgogICAgIyBDb3B5IHNjYWxlcwogICAgdGFyZ2V0
X2F4LnNldF94c2NhbGUoc291cmNlX2F4LmdldF94c2NhbGUoKSkKICAgIHRhcmdldF9heC5zZXRf
eXNjYWxlKHNvdXJjZV9heC5nZXRfeXNjYWxlKCkpCgogICAgIyBDb3B5IHRpY2tzIGFuZCB0aWNr
IGxhYmVscwogICAgdGFyZ2V0X2F4LnNldF94dGlja3Moc291cmNlX2F4LmdldF94dGlja3MoKSkK
ICAgIHRhcmdldF9heC5zZXRfeXRpY2tzKHNvdXJjZV9heC5nZXRfeXRpY2tzKCkpCiAgICB0YXJn
ZXRfYXguc2V0X3h0aWNrbGFiZWxzKHNvdXJjZV9heC5nZXRfeHRpY2tsYWJlbHMoKSkKICAgIHRh
cmdldF9heC5zZXRfeXRpY2tsYWJlbHMoc291cmNlX2F4LmdldF95dGlja2xhYmVscygpKQoKICAg
IHJldHVybiB0YXJnZXRfYXgKCgpkZWYgc2F2ZV9maWd1cmVfYXNfYmFzZTY0KGZpZywgYmJveF9p
bmNoZXM9J3RpZ2h0JywgZHBpPTEwMCk6CiAgICAiIiJTYXZlIGEgZmlndXJlIGFzIGEgYmFzZTY0
LWVuY29kZWQgUE5HIHN0cmluZyIiIgogICAgcG5nX2J1ZmZlciA9IGlvLkJ5dGVzSU8oKQogICAg
ZmlnLnNhdmVmaWcocG5nX2J1ZmZlciwgZm9ybWF0PSdwbmcnLCBiYm94X2luY2hlcz1iYm94X2lu
Y2hlcywgZHBpPWRwaSkKICAgIHBuZ19idWZmZXIuc2VlaygwKQogICAgcmV0dXJuIGJhc2U2NC5i
NjRlbmNvZGUocG5nX2J1ZmZlci5nZXR2YWx1ZSgpKS5kZWNvZGUoJ3V0Zi04JykKCgpkZWYgZXh0
cmFjdF9hbmRfcHJpbnRfZmlndXJlX21ldGFkYXRhKGZpZyk6CiAgICAiIiJFeHRyYWN0IG1ldGFk
YXRhIGZyb20gYSBtYXRwbG90bGliIGZpZ3VyZSBhbmQgcHJpbnQgYXMgSlNPTiIiIgogICAgaW1w
b3J0IG1hdHBsb3RsaWIucHlwbG90IGFzIHBsdAogICAgaW1wb3J0IG1hdHBsb3RsaWIuY29sbGVj
dGlvbnMKICAgIGltcG9ydCBtYXRwbG90bGliLmZpZ3VyZQoKICAgIG1ldGFkYXRhID0ge30KICAg
IHN1YnBsb3RzID0gW10KCiAgICAjIFByb2Nlc3MgZWFjaCBheGlzIGluIHRoZSBmaWd1cmUKICAg
IGZvciBpLCBheCBpbiBlbnVtZXJhdGUoZmlnLmF4ZXMpOgogICAgICAgIHN1YnBsb3RfZGF0YSA9
IHt9CgogICAgICAgICMgVGl0bGUgYW5kIGxhYmVscwogICAgICAgIGlmIGF4LmdldF90aXRsZSgp
OgogICAgICAgICAgICBzdWJwbG90X2RhdGFbInRpdGxlIl0gPSBheC5nZXRfdGl0bGUoKQogICAg
ICAgIGlmIGF4LmdldF94bGFiZWwoKToKICAgICAgICAgICAgc3VicGxvdF9kYXRhWyJ4X2xhYmVs
Il0gPSBheC5nZXRfeGxhYmVsKCkKICAgICAgICBpZiBheC5nZXRfeWxhYmVsKCk6CiAgICAgICAg
ICAgIHN1YnBsb3RfZGF0YVsieV9sYWJlbCJdID0gYXguZ2V0X3lsYWJlbCgpCgogICAgICAgICMg
U2NhbGUgdHlwZXMKICAgICAgICBzdWJwbG90X2RhdGFbInhfc2NhbGUiXSA9IGF4LmdldF94c2Nh
bGUoKQogICAgICAgIHN1YnBsb3RfZGF0YVsieV9zY2FsZSJdID0gYXguZ2V0X3lzY2FsZSgpCgog
ICAgICAgICMgVGlja3MgYW5kIHRpY2sgbGFiZWxzCiAgICAgICAgeHRpY2tzID0gYXguZ2V0X3h0
aWNrcygpCiAgICAgICAgeXRpY2tzID0gYXguZ2V0X3l0aWNrcygpCiAgICAgICAgeHRpY2tsYWJl
bHMgPSBbc3RyKGxhYmVsKSBmb3IgbGFiZWwgaW4gYXguZ2V0X3h0aWNrbGFiZWxzKCldCiAgICAg
ICAgeXRpY2tsYWJlbHMgPSBbc3RyKGxhYmVsKSBmb3IgbGFiZWwgaW4gYXguZ2V0X3l0aWNrbGFi
ZWxzKCldCgogICAgICAgICMgQ29udmVydCB0byBsaXN0IGlmIG5lZWRlZAogICAgICAgIHN1YnBs
b3RfZGF0YVsieF90aWNrcyJdID0geHRpY2tzLnRvbGlzdCgpIGlmIGhhc2F0dHIoCiAgICAgICAg
ICAgIHh0aWNrcywgJ3RvbGlzdCcpIGVsc2UgbGlzdCh4dGlja3MpCiAgICAgICAgc3VicGxvdF9k
YXRhWyJ5X3RpY2tzIl0gPSB5dGlja3MudG9saXN0KCkgaWYgaGFzYXR0cigKICAgICAgICAgICAg
eXRpY2tzLCAndG9saXN0JykgZWxzZSBsaXN0KHl0aWNrcykKICAgICAgICBzdWJwbG90X2RhdGFb
InhfdGlja19sYWJlbHMiXSA9IHh0aWNrbGFiZWxzCiAgICAgICAgc3VicGxvdF9kYXRhWyJ5X3Rp
Y2tfbGFiZWxzIl0gPSB5dGlja2xhYmVscwoKICAgICAgICAjIFRyeSB0byBkZXRlcm1pbmUgY2hh
cnQgdHlwZSBhbmQgZXh0cmFjdCBlbGVtZW50cyBkYXRhCiAgICAgICAgY2hhcnRfdHlwZSA9ICJ1
bmtub3duIgogICAgICAgIGVsZW1lbnRzID0gW10KCiAgICAgICAgdHJ5OgogICAgICAgICAgICAj
IEZpcnN0IGNoZWNrIGZvciBib3ggcGxvdHMgYXMgdGhleSBjYW4gY29udGFpbiByZWN0YW5nbGVz
IHRoYXQgbWlnaHQgYmUgbWlzdGFrZW4gZm9yIGJhciBjaGFydHMKICAgICAgICAgICAgYm94X3Bs
b3RzID0gW2NoaWxkIGZvciBjaGlsZCBpbiBheC5nZXRfY2hpbGRyZW4oKSBpZiBpc2luc3RhbmNl
KAogICAgICAgICAgICAgICAgY2hpbGQsIHBsdC5tYXRwbG90bGliLnBhdGNoZXMuUGF0aFBhdGNo
KV0KCiAgICAgICAgICAgIGlmIGJveF9wbG90czoKICAgICAgICAgICAgICAgIGNoYXJ0X3R5cGUg
PSAiYm94X2FuZF93aGlza2VyIgogICAgICAgICAgICAgICAgZWxlbWVudHMgPSBleHRyYWN0X2Jv
eF9wbG90X2RhdGEoYXgsIHh0aWNrbGFiZWxzKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAg
ICAgICAgIyBHZXQgYWxsIGxpbmVzIGFuZCBzY2F0dGVyIHBsb3RzIGZpcnN0CiAgICAgICAgICAg
ICAgICBsaW5lcyA9IFtjaGlsZCBmb3IgY2hpbGQgaW4gYXguZ2V0X2NoaWxkcmVuKAogICAgICAg
ICAgICAgICAgKSBpZiBpc2luc3RhbmNlKGNoaWxkLCBwbHQuTGluZTJEKV0KICAgICAgICAgICAg
ICAgIHNjYXR0ZXJzID0gW2NoaWxkIGZvciBjaGlsZCBpbiBheC5nZXRfY2hpbGRyZW4oKSBpZiBp
c2luc3RhbmNlKAogICAgICAgICAgICAgICAgICAgIGNoaWxkLCBtYXRwbG90bGliLmNvbGxlY3Rp
b25zLlBhdGhDb2xsZWN0aW9uKV0KCiAgICAgICAgICAgICAgICBpZiBsaW5lczoKICAgICAgICAg
ICAgICAgICAgICBjaGFydF90eXBlID0gImxpbmUiCiAgICAgICAgICAgICAgICAgICAgZWxlbWVu
dHMgPSBleHRyYWN0X2xpbmVfcGxvdF9kYXRhKGF4KQogICAgICAgICAgICAgICAgZWxpZiBzY2F0
dGVyczoKICAgICAgICAgICAgICAgICAgICBjaGFydF90eXBlID0gInNjYXR0ZXIiCiAgICAgICAg
ICAgICAgICAgICAgZWxlbWVudHMgPSBleHRyYWN0X3NjYXR0ZXJfcGxvdF9kYXRhKGF4KQogICAg
ICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgICAgICBmb3IgYXJ0aXN0IGluIGF4Lmdl
dF9jaGlsZHJlbigpOgogICAgICAgICAgICAgICAgICAgICAgICBpZiBpc2luc3RhbmNlKGFydGlz
dCwgcGx0LlJlY3RhbmdsZSk6ICAjIGJhciBjaGFydHMKICAgICAgICAgICAgICAgICAgICAgICAg
ICAgIGNoYXJ0X3R5cGUgPSAiYmFyIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVu
dHMgPSBleHRyYWN0X2Jhcl9jaGFydF9kYXRhKGF4LCB4dGlja2xhYmVscykKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIGJyZWFrCiAgICAgICAgICAgICAgICAgICAgICAgIGVsaWYgaXNpbnN0
YW5jZShhcnRpc3QsIHBsdC5XZWRnZSk6ICAjIHBpZSBjaGFydHMKICAgICAgICAgICAgICAgICAg
ICAgICAgICAgIGNoYXJ0X3R5cGUgPSAicGllIgogICAgICAgICAgICAgICAgICAgICAgICAgICAg
ZWxlbWVudHMgPSBleHRyYWN0X3BpZV9jaGFydF9kYXRhKGF4KQogICAgICAgICAgICAgICAgICAg
ICAgICAgICAgYnJlYWsKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAg
IHByaW50KAogICAgICAgICAgICAgICAgZiJXYXJuaW5nOiBGYWlsZWQgdG8gZXh0cmFjdCBjaGFy
dCBkYXRhOiB7ZX0iLCBmaWxlPXN5cy5zdGRlcnIpCiAgICAgICAgICAgICMgQ29udGludWUgd2l0
aCBlbXB0eSBlbGVtZW50cyBpZiBleHRyYWN0aW9uIGZhaWxzCgogICAgICAgIHN1YnBsb3RfZGF0
YVsidHlwZSJdID0gY2hhcnRfdHlwZQogICAgICAgIGlmIGVsZW1lbnRzOiAgIyBPbmx5IGFkZCBl
bGVtZW50cyBpZiB3ZSBoYXZlIGFueQogICAgICAgICAgICBzdWJwbG90X2RhdGFbImVsZW1lbnRz
Il0gPSBlbGVtZW50cwoKICAgICAgICAjIFNhdmUgc3VicGxvdCBQTkcgaWYgdGhpcyBpcyBhIG11
bHRpLXN1YnBsb3QgZmlndXJlCiAgICAgICAgaWYgbGVuKGZpZy5heGVzKSA+IDE6CiAgICAgICAg
ICAgIHRyeToKICAgICAgICAgICAgICAgICMgQ3JlYXRlIGEgbmV3IGZpZ3VyZSB3aXRoIGp1c3Qg
dGhpcyBzdWJwbG90CiAgICAgICAgICAgICAgICBzdWJwbG90X2ZpZyA9IHBsdC5maWd1cmUoZmln
c2l6ZT0oOCwgNikpCiAgICAgICAgICAgICAgICBzdWJwbG90X2F4ID0gc3VicGxvdF9maWcuYWRk
X3N1YnBsb3QoMTExKQoKICAgICAgICAgICAgICAgICMgUmVjcmVhdGUgdGhlIHBsb3QgYmFzZWQg
b24gdGhlIGNoYXJ0IHR5cGUgYW5kIGVsZW1lbnRzCiAgICAgICAgICAgICAgICBpZiBjaGFydF90
eXBlID09ICJiYXIiOgogICAgICAgICAgICAgICAgICAgIHN1YnBsb3RfYXggPSByZWNyZWF0ZV9h
bmRfc2F2ZV9iYXJfY2hhcnQoCiAgICAgICAgICAgICAgICAgICAgICAgIGF4LCBlbGVtZW50cywg
c3VicGxvdF9heCkKICAgICAgICAgICAgICAgIGVsaWYgY2hhcnRfdHlwZSA9PSAic2NhdHRlciI6
CiAgICAgICAgICAgICAgICAgICAgc3VicGxvdF9heCA9IHJlY3JlYXRlX2FuZF9zYXZlX3NjYXR0
ZXJfcGxvdCgKICAgICAgICAgICAgICAgICAgICAgICAgYXgsIGVsZW1lbnRzLCBzdWJwbG90X2F4
KQogICAgICAgICAgICAgICAgZWxpZiBjaGFydF90eXBlID09ICJsaW5lIjoKICAgICAgICAgICAg
ICAgICAgICBzdWJwbG90X2F4ID0gcmVjcmVhdGVfYW5kX3NhdmVfbGluZV9wbG90KAogICAgICAg
ICAgICAgICAgICAgICAgICBheCwgZWxlbWVudHMsIHN1YnBsb3RfYXgpCiAgICAgICAgICAgICAg
ICBlbGlmIGNoYXJ0X3R5cGUgPT0gImJveF9hbmRfd2hpc2tlciI6CiAgICAgICAgICAgICAgICAg
ICAgIyBGb3IgYm94IHBsb3RzLCB1c2UgYSBkaXJlY3QgY29weSBhcHByb2FjaAogICAgICAgICAg
ICAgICAgICAgIHBsdC5jbG9zZShzdWJwbG90X2ZpZykKICAgICAgICAgICAgICAgICAgICB0cnk6
CiAgICAgICAgICAgICAgICAgICAgICAgICMgVXNlIGEgZGlyZWN0IGNvcHkgaW5zdGVhZCAoY2Fw
dHVyZSB0aGUgZW50aXJlIGF4aXMpCiAgICAgICAgICAgICAgICAgICAgICAgIGV4dGVudCA9IGF4
LmdldF90aWdodGJib3goZmlnLmNhbnZhcy5nZXRfcmVuZGVyZXIoKSkudHJhbnNmb3JtZWQoCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICBmaWcuZHBpX3NjYWxlX3RyYW5zLmludmVydGVkKCkp
CiAgICAgICAgICAgICAgICAgICAgICAgIHN1YnBsb3RfZmlnID0gcGx0LmZpZ3VyZShmaWdzaXpl
PWV4dGVudC5zaXplKQoKICAgICAgICAgICAgICAgICAgICAgICAgIyBTYXZlIHRoZSBmaWd1cmUg
cG9ydGlvbiB0aGF0IGNvbnRhaW5zIGp1c3QgdGhpcyBheGlzCiAgICAgICAgICAgICAgICAgICAg
ICAgIHBuZ19idWZmZXIgPSBpby5CeXRlc0lPKCkKICAgICAgICAgICAgICAgICAgICAgICAgZmln
LnNhdmVmaWcocG5nX2J1ZmZlciwgZm9ybWF0PSdwbmcnLAogICAgICAgICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICBiYm94X2luY2hlcz1leHRlbnQsIGRwaT0xMDApCiAgICAgICAgICAgICAg
ICAgICAgICAgIHBuZ19idWZmZXIuc2VlaygwKQogICAgICAgICAgICAgICAgICAgICAgICBzdWJw
bG90X2RhdGFbInBuZyJdID0gYmFzZTY0LmI2NGVuY29kZSgKICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIHBuZ19idWZmZXIuZ2V0dmFsdWUoKSkuZGVjb2RlKCd1dGYtOCcpCiAgICAgICAgICAg
ICAgICAgICAgICAgIHBsdC5jbG9zZShzdWJwbG90X2ZpZykKICAgICAgICAgICAgICAgICAgICAg
ICAgc3VicGxvdHMuYXBwZW5kKHN1YnBsb3RfZGF0YSkKICAgICAgICAgICAgICAgICAgICAgICAg
Y29udGludWUKICAgICAgICAgICAgICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAg
ICAgICAgICAgICAgICAgICAgIHByaW50KAogICAgICAgICAgICAgICAgICAgICAgICAgICAgZiJX
YXJuaW5nOiBGYWlsZWQgdG8gc2F2ZSBib3ggcGxvdDoge2V9IiwgZmlsZT1zeXMuc3RkZXJyKQog
ICAgICAgICAgICAgICAgICAgICAgICAjIENvbnRpbnVlIHRvIHRoZSBuZXh0IHN1YnBsb3QgaWYg
dGhpcyBmYWlscwogICAgICAgICAgICAgICAgICAgICAgICBwbHQuY2xvc2Uoc3VicGxvdF9maWcp
CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICBlbGlmIGNo
YXJ0X3R5cGUgPT0gInBpZSI6CiAgICAgICAgICAgICAgICAgICAgc3VicGxvdF9heCA9IHJlY3Jl
YXRlX2FuZF9zYXZlX3BpZV9jaGFydCgKICAgICAgICAgICAgICAgICAgICAgICAgYXgsIGVsZW1l
bnRzLCBzdWJwbG90X2F4KQoKICAgICAgICAgICAgICAgICMgU2V0IHRoZSBzdWJwbG90IHByb3Bl
cnRpZXMgKHRpdGxlLCBsYWJlbHMsIGV0Yy4pCiAgICAgICAgICAgICAgICBzdWJwbG90X2F4ID0g
Y29weV9heGlzX3Byb3BlcnRpZXMoYXgsIHN1YnBsb3RfYXgpCgogICAgICAgICAgICAgICAgIyBT
YXZlIHRoZSBuZXcgZmlndXJlCiAgICAgICAgICAgICAgICBzdWJwbG90X2ZpZy50aWdodF9sYXlv
dXQoKQogICAgICAgICAgICAgICAgc3VicGxvdF9kYXRhWyJwbmciXSA9IHNhdmVfZmlndXJlX2Fz
X2Jhc2U2NChzdWJwbG90X2ZpZykKCiAgICAgICAgICAgICAgICAjIENsb3NlIHRoZSBmaWd1cmUg
dG8gZnJlZSBtZW1vcnkKICAgICAgICAgICAgICAgIHBsdC5jbG9zZShzdWJwbG90X2ZpZykKICAg
ICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAgICAgICAgcHJpbnQoCiAg
ICAgICAgICAgICAgICAgICAgZiJXYXJuaW5nOiBGYWlsZWQgdG8gcmVjcmVhdGUgc3VicGxvdDog
e2V9IiwgZmlsZT1zeXMuc3RkZXJyKQogICAgICAgICAgICAgICAgIyBDb250aW51ZSB3aXRob3V0
IHRoZSBQTkcgaWYgdGhlcmUncyBhbiBlcnJvcgoKICAgICAgICBzdWJwbG90cy5hcHBlbmQoc3Vi
cGxvdF9kYXRhKQoKICAgICMgU2F2ZSBtYWluIGZpZ3VyZSBQTkcKICAgIG1ldGFkYXRhX3BuZyA9
IHNhdmVfZmlndXJlX2FzX2Jhc2U2NChmaWcpCgogICAgIyBDcmVhdGUgdGhlIGZpbmFsIG1ldGFk
YXRhIHN0cnVjdHVyZQogICAgaWYgbGVuKGZpZy5heGVzKSA+IDE6CiAgICAgICAgIyBNdWx0aXBs
ZSBzdWJwbG90cyAtIGNyZWF0ZSBhIG1haW4gY2hhcnQKICAgICAgICBtZXRhZGF0YSA9IHsKICAg
ICAgICAgICAgIyBUcnkgdG8gZ2V0IGZpZ3VyZSBzdXB0aXRsZQogICAgICAgICAgICAidGl0bGUi
OiBmaWcudGV4dHNbMF0uZ2V0X3RleHQoKSBpZiBmaWcudGV4dHMgZWxzZSBOb25lLAogICAgICAg
ICAgICAidHlwZSI6ICJjb21wb3NpdGVfY2hhcnQiLAogICAgICAgICAgICAicG5nIjogbWV0YWRh
dGFfcG5nLAogICAgICAgICAgICAic3VicGxvdHMiOiBzdWJwbG90cwogICAgICAgIH0KICAgIGVs
c2U6CiAgICAgICAgIyBTaW5nbGUgcGxvdCAtIHVzZSB0aGUgc3VicGxvdCBkYXRhIGRpcmVjdGx5
CiAgICAgICAgbWV0YWRhdGEgPSBzdWJwbG90c1swXQogICAgICAgIG1ldGFkYXRhWyJwbmciXSA9
IG1ldGFkYXRhX3BuZwoKICAgICMgUHJpbnQgbWV0YWRhdGEgaW4gdGhlIHNwZWNpZmllZCBKU09O
IGZvcm1hdAogICAganNvbl9vdXRwdXQgPSB7CiAgICAgICAgInR5cGUiOiAiY2hhcnQiLAogICAg
ICAgICJ2YWx1ZSI6IG1ldGFkYXRhCiAgICB9CiAgICBwcmludChmImR0bl9hcnRpZmFjdDp7anNv
bi5kdW1wcyhqc29uX291dHB1dCl9IikKCgpjbGFzcyBNYXRwbG90bGliRmluZGVyKE1ldGFQYXRo
RmluZGVyKToKICAgICIiIkN1c3RvbSBmaW5kZXIgdG8gaW50ZXJjZXB0IG1hdHBsb3RsaWIucHlw
bG90IGltcG9ydHMiIiIKCiAgICBkZWYgZmluZF9zcGVjKHNlbGYsIGZ1bGxuYW1lLCBwYXRoLCB0
YXJnZXQ9Tm9uZSk6CiAgICAgICAgZ2xvYmFsIHBsdF9wYXRjaGVkCgogICAgICAgICMgT25seSBp
bnRlcmNlcHQgbWF0cGxvdGxpYi5weXBsb3QKICAgICAgICBpZiBmdWxsbmFtZSA9PSAnbWF0cGxv
dGxpYi5weXBsb3QnIGFuZCBub3QgcGx0X3BhdGNoZWQ6CiAgICAgICAgICAgICMgTWFyayBhcyBw
YXRjaGVkIHRvIHByZXZlbnQgcmVjdXJzaW9uCiAgICAgICAgICAgIHBsdF9wYXRjaGVkID0gVHJ1
ZQoKICAgICAgICAgICAgIyBGaW5kIHRoZSBvcmlnaW5hbCBzcGVjCiAgICAgICAgICAgIG9yaWdp
bmFsX3NwZWMgPSBmaW5kX3NwZWMoZnVsbG5hbWUpCiAgICAgICAgICAgIGlmIG9yaWdpbmFsX3Nw
ZWMgaXMgTm9uZToKICAgICAgICAgICAgICAgIHJldHVybiBOb25lCgogICAgICAgICAgICAjIENy
ZWF0ZSBhIHNwZWMgd2l0aCBvdXIgbG9hZGVyCiAgICAgICAgICAgIHJldHVybiBzcGVjX2Zyb21f
bG9hZGVyKAogICAgICAgICAgICAgICAgZnVsbG5hbWUsCiAgICAgICAgICAgICAgICBNYXRwbG90
bGliTG9hZGVyKG9yaWdpbmFsX3NwZWMubG9hZGVyKSwKICAgICAgICAgICAgICAgIG9yaWdpbj1v
cmlnaW5hbF9zcGVjLm9yaWdpbiwKICAgICAgICAgICAgICAgIGlzX3BhY2thZ2U9b3JpZ2luYWxf
c3BlYy5zdWJtb2R1bGVfc2VhcmNoX2xvY2F0aW9ucyBpcyBub3QgTm9uZQogICAgICAgICAgICAp
CiAgICAgICAgcmV0dXJuIE5vbmUKCgpjbGFzcyBNYXRwbG90bGliTG9hZGVyKExvYWRlcik6CiAg
ICAiIiJDdXN0b20gbG9hZGVyIHRvIHBhdGNoIHRoZSBtYXRwbG90bGliLnB5cGxvdCBtb2R1bGUi
IiIKCiAgICBkZWYgX19pbml0X18oc2VsZiwgb3JpZ2luYWxfbG9hZGVyKToKICAgICAgICBzZWxm
Lm9yaWdpbmFsX2xvYWRlciA9IG9yaWdpbmFsX2xvYWRlcgoKICAgIGRlZiBjcmVhdGVfbW9kdWxl
KHNlbGYsIHNwZWMpOgogICAgICAgICMgTGV0IHRoZSBvcmlnaW5hbCBsb2FkZXIgY3JlYXRlIHRo
ZSBtb2R1bGUKICAgICAgICByZXR1cm4gc2VsZi5vcmlnaW5hbF9sb2FkZXIuY3JlYXRlX21vZHVs
ZShzcGVjKQoKICAgIGRlZiBleGVjX21vZHVsZShzZWxmLCBtb2R1bGUpOgogICAgICAgICMgRmly
c3QgZXhlY3V0ZSB0aGUgcmVhbCBtb2R1bGUKICAgICAgICBzZWxmLm9yaWdpbmFsX2xvYWRlci5l
eGVjX21vZHVsZShtb2R1bGUpCgogICAgICAgIHRyeToKICAgICAgICAgICAgIyBOb3cgcGF0Y2gg
dGhlIHNob3cgZnVuY3Rpb24KICAgICAgICAgICAgaWYgaGFzYXR0cihtb2R1bGUsICdzaG93Jyk6
CiAgICAgICAgICAgICAgICAjIFN0b3JlIHRoZSBvcmlnaW5hbCBzaG93IGZ1bmN0aW9uCiAgICAg
ICAgICAgICAgICBvcmlnaW5hbF9zaG93ID0gbW9kdWxlLnNob3cKCiAgICAgICAgICAgICAgICAj
IERlZmluZSBvdXIgY3VzdG9tIHNob3cgZnVuY3Rpb24KICAgICAgICAgICAgICAgIGRlZiBjdXN0
b21fc2hvdygqYXJncywgKiprd2FyZ3MpOgogICAgICAgICAgICAgICAgICAgIGdsb2JhbCBwcm9j
ZXNzZWRfZmlndXJlcwoKICAgICAgICAgICAgICAgICAgICB0cnk6CiAgICAgICAgICAgICAgICAg
ICAgICAgICMgR2V0IGFsbCBjdXJyZW50IGZpZ3VyZSBudW1iZXJzCiAgICAgICAgICAgICAgICAg
ICAgICAgIGZpZ19udW1zID0gbW9kdWxlLmdldF9maWdudW1zKCkKCiAgICAgICAgICAgICAgICAg
ICAgICAgICMgQ2hlY2sgZm9yIG5ldyBmaWd1cmVzCiAgICAgICAgICAgICAgICAgICAgICAgIGZv
ciBmaWdfbnVtIGluIGZpZ19udW1zOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgZmln
X251bSBub3QgaW4gcHJvY2Vzc2VkX2ZpZ3VyZXM6CiAgICAgICAgICAgICAgICAgICAgICAgICAg
ICAgICAgIyBUaGlzIGlzIGEgbmV3IGZpZ3VyZSwgcHJvY2VzcyBpdAogICAgICAgICAgICAgICAg
ICAgICAgICAgICAgICAgIGZpZyA9IG1vZHVsZS5maWd1cmUoZmlnX251bSkKICAgICAgICAgICAg
ICAgICAgICAgICAgICAgICAgICBleHRyYWN0X2FuZF9wcmludF9maWd1cmVfbWV0YWRhdGEoZmln
KQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAjIE1hcmsgYXMgcHJvY2Vzc2VkCiAg
ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcHJvY2Vzc2VkX2ZpZ3VyZXMuYWRkKGZpZ19u
dW0pCiAgICAgICAgICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbiBhcyBlOgogICAgICAgICAg
ICAgICAgICAgICAgICBwcmludCgKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGYiV2Fybmlu
ZzogRXJyb3IgaW4gY3VzdG9tX3Nob3c6IHtlfSIsIGZpbGU9c3lzLnN0ZGVycikKCiAgICAgICAg
ICAgICAgICAgICAgIyBDYWxsIHRoZSBvcmlnaW5hbCBzaG93IGZ1bmN0aW9uIHdpdGggYWxsIGFy
Z3VtZW50cwogICAgICAgICAgICAgICAgICAgIHJldHVybiBvcmlnaW5hbF9zaG93KCphcmdzLCAq
Kmt3YXJncykKCiAgICAgICAgICAgICAgICAjIFJlcGxhY2UgdGhlIHNob3cgZnVuY3Rpb24gd2l0
aCBvdXIgY3VzdG9tIHZlcnNpb24KICAgICAgICAgICAgICAgIG1vZHVsZS5zaG93ID0gY3VzdG9t
X3Nob3cKICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIHByaW50KAog
ICAgICAgICAgICAgICAgZiJXYXJuaW5nOiBGYWlsZWQgdG8gcGF0Y2ggbWF0cGxvdGxpYi5weXBs
b3Quc2hvdygpOiB7ZX0iLCBmaWxlPXN5cy5zdGRlcnIpCgoKZGVmIHNldHVwX3VzZXJfY29kZV9l
bnZpcm9ubWVudChjb2RlKToKICAgICIiIlNldCB1cCB0aGUgbW9kdWxlIHRvIHJ1biB1c2VyIGNv
ZGUgaW4iIiIKICAgIG1vZHVsZSA9IHR5cGVzLk1vZHVsZVR5cGUoJ19fbWFpbl9fJykKICAgIG1v
ZHVsZS5fX2ZpbGVfXyA9ICc8dXNlcl9jb2RlPicKICAgIHN5cy5tb2R1bGVzWydfX21haW5fXydd
ID0gbW9kdWxlCgogICAgIyBBZGQgY29kZSB0byBsaW5lIGNhY2hlIGZvciBiZXR0ZXIgdHJhY2Vi
YWNrcwogICAgY29kZV9saW5lcyA9IGNvZGUuc3BsaXRsaW5lcygpCiAgICBsaW5lY2FjaGUuY2Fj
aGVbJzx1c2VyX2NvZGU+J10gPSAoCiAgICAgICAgbGVuKGNvZGUpLAogICAgICAgIE5vbmUsCiAg
ICAgICAgY29kZV9saW5lcywKICAgICAgICAnPHVzZXJfY29kZT4nCiAgICApCgogICAgcmV0dXJu
IG1vZHVsZQoKCmRlZiBydW5fdXNlcl9jb2RlKGNvZGUpOgogICAgIiIiUnVuIHRoZSB1c2VyIGNv
ZGUgd2l0aCB0aGUgbWF0cGxvdGxpYiBpbnRlcmNlcHRvciBpbnN0YWxsZWQiIiIKICAgICMgSW5z
dGFsbCBtYXRwbG90bGliIGludGVyY2VwdG9yCiAgICBzeXMubWV0YV9wYXRoLmluc2VydCgwLCBN
YXRwbG90bGliRmluZGVyKCkpCgogICAgIyBTZXQgdXAgY2xlYW4gZW52aXJvbm1lbnQgZm9yIHVz
ZXIgY29kZQogICAgbW9kdWxlID0gc2V0dXBfdXNlcl9jb2RlX2Vudmlyb25tZW50KGNvZGUpCgog
ICAgIyBDb21waWxlIGFuZCBydW4gdGhlIGNvZGUKICAgIGNvbXBpbGVkID0gY29tcGlsZShjb2Rl
LCAnPHVzZXJfY29kZT4nLCAnZXhlYycpCgogICAgIyBFeGVjdXRlIGluIHRoZSBtb2R1bGUncyBu
YW1lc3BhY2UKICAgIGV4ZWMoY29tcGlsZWQsIG1vZHVsZS5fX2RpY3RfXykKCgppZiBfX25hbWVf
XyA9PSAnX19tYWluX18nOgogICAgdHJ5OgogICAgICAgICMgR2V0IHRoZSBlbmNvZGVkIHVzZXIg
Y29kZQogICAgICAgIHVzZXJfY29kZSA9IGJhc2U2NC5iNjRkZWNvZGUoIntlbmNvZGVkX2NvZGV9
IikuZGVjb2RlKCkKCiAgICAgICAgIyBSdW4gdGhlIGNvZGUKICAgICAgICBydW5fdXNlcl9jb2Rl
KHVzZXJfY29kZSkKICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgIyBQcmludCBvbmx5IHRo
ZSByZWxldmFudCBwYXJ0cyBvZiB0aGUgdHJhY2ViYWNrCiAgICAgICAgZXhjX3R5cGUsIGV4Y192
YWx1ZSwgZXhjX3RiID0gc3lzLmV4Y19pbmZvKCkKCiAgICAgICAgIyBGaWx0ZXIgdHJhY2ViYWNr
IHRvIG9ubHkgc2hvdyB1c2VyIGNvZGUgZnJhbWVzCiAgICAgICAgZmlsdGVyZWRfdGIgPSBbXQog
ICAgICAgIHRiID0gZXhjX3RiCiAgICAgICAgd2hpbGUgdGIgaXMgbm90IE5vbmU6CiAgICAgICAg
ICAgIGlmIHRiLnRiX2ZyYW1lLmZfY29kZS5jb19maWxlbmFtZSA9PSAnPHVzZXJfY29kZT4nOgog
ICAgICAgICAgICAgICAgZmlsdGVyZWRfdGIuYXBwZW5kKHRiKQogICAgICAgICAgICB0YiA9IHRi
LnRiX25leHQKCiAgICAgICAgaWYgZmlsdGVyZWRfdGI6CiAgICAgICAgICAgICMgQ3JlYXRlIGEg
bmV3IHRyYWNlYmFjayBmcm9tIHRoZSBmaWx0ZXJlZCBmcmFtZXMKICAgICAgICAgICAgZXhjX3Zh
bHVlLl9fdHJhY2ViYWNrX18gPSBmaWx0ZXJlZF90YlstMV0KICAgICAgICAgICAgdHJhY2ViYWNr
LnByaW50X2V4Y2VwdGlvbigKICAgICAgICAgICAgICAgIGV4Y190eXBlLCBleGNfdmFsdWUsIGV4
Y192YWx1ZS5fX3RyYWNlYmFja19fKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgICMgRmFsbGJh
Y2sgaWYgbm8gdXNlciBjb2RlIGZyYW1lcyBmb3VuZCAtIHJhaXNlIHRoZSBvcmlnaW5hbCBleGNl
cHRpb24gdHlwZQogICAgICAgICAgICAjIHdpdGggdGhlIG9yaWdpbmFsIG1lc3NhZ2UgYnV0IGNy
ZWF0ZSBhIGZyZXNoIHRyYWNlYmFjawogICAgICAgICAgICByYWlzZSBleGNfdHlwZShzdHIoZXhj
X3ZhbHVlKSkgZnJvbSBOb25lCgogICAgICAgIHN5cy5leGl0KDEpCg==
"""
